<div class="container-fluid border-0">
  <div class="row">
    <div class="col-lg-6 col-lg-offset-3" style="background-color: #b32116; color: white">

      <div class="row">
        <h3 style="text-align: center; margin-top: 5px;">Timer
        </h3>
        <hr>
      </div>

      <div class="row">
        <div class="col-lg-4 col-lg-offset-4">
          <div id="counter" style="border: 0px; font-size: 20px; text-align: center;">00:00:00</div>
        </div>
      </div>
      <br>

      <div class="row">

        <div class="col-lg-10 col-lg-offset-1">
          <div class="col-lg-3">
            <%= form_with(model: timer, local: true) do |form| %>
              <% if timer.errors.any? %>
                <div id="error_explanation">
                  <h2><%= pluralize(timer.errors.count, "error") %> prohibited this timer from being saved:</h2>

                  <ul>
                  <% timer.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                  </ul>
                </div>
              <% end %>
              <div class="actions">
                <!-- <#%= form.submit 'Save' %> -->
                <input type="submit" class="btn btn-success-outline btn-block mainButtons" name="commit" value="SAVE" data-disable-with="Save">
              </div>

              <div class="field">
                <!-- <#%= form.label :count_time %> -->
                <%= form.hidden_field :count_time, id: :timer_count_time %>
                <!-- <input type="time" id="timer_count_time"> -->
              </div>
            <% end %>
          </div>

          <div class="col-lg-3">
            <button id="start" class="btn btn-success-outline btn-block mainButtons">START</button>
          </div>

          <div class="col-lg-3">
            <button id="stop" class="btn btn-success-outline btn-block mainButtons">STOP</button>
          </div>

          <div class="col-lg-3">
            <button id="reset" class="btn btn-success-outline btn-block mainButtons">RESET</button>
          </div>
        </div>
      </div>
      <hr>

      <div class="row">
        <div class="col-lg-12" style="padding: 2px;">

          <!-- testing table -->
          <div class="wrapper" style="padding: 2px;">

            <div class="table">

              <div class="row innerRow header">
                <div class="cell">
                  Timers
                </div>
                <div class="cell">
                  %s
                </div>
                <div class="cell">
                  %s
                </div>
                <div class="cell">
                  %s
                </div>
              </div>

              <% @timers.each do |timer| %>
              <div class="row innerRow">
                <div class="cell">
                  <%= timer.count_time %>
                </div>
                <div class="cell">
                  %s
                </div>
                <div class="cell">
                  %s
                </div>
                <div class="cell">
                  <!-- <#%= link_to 'Delete', timer, method: :delete, data: { confirm: 'Are you sure?' } %> -->
                  <button class="timer-delete-button btn btn-sm" data-confirm="Are you sure?" rel="nofollow" data-method="delete" href="/timers/<%= timer.id %>" ><i class="fa fa-trash-o fa-2x" aria-hidden="true"></i></button>
                </div>
              </div>
              <% end %>

            </div>

          </div>
          <!-- end of testing table -->

        </div>
      </div>

    </div>
  </div>

</div>


<!-- <ul id="info" style="width: 100%; height: 180px; color: #b32116; padding: 0px; background-color: white;">
  <% @timers.each do |timer| %>
  <li><#%= timer.count_time %></li>
  <li><#%= link_to 'Delete', timer, method: :delete, data: { confirm: 'Are you sure?' } %></li>
  <% end %>
</ul> -->


<!-- testing table -->
<!-- <div class="wrapper" style="margin-top: 100px;">

  <div class="table">

    <div class="row innerRow header">
      <div class="cell">
        Name
      </div>
      <div class="cell">
        Age
      </div>
      <div class="cell">
        Occupation
      </div>
      <div class="cell">
        Location
      </div>
    </div>

    <div class="row innerRow">
      <div class="cell">
        Luke Peters
      </div>
      <div class="cell">
        25
      </div>
      <div class="cell">
        Freelance Web Developer
      </div>
      <div class="cell">
        Brookline, MA
      </div>
    </div>

    <div class="row innerRow">
      <div class="cell">
        Joseph Smith
      </div>
      <div class="cell">
        27
      </div>
      <div class="cell">
        Project Manager
      </div>
      <div class="cell">
        Somerville, MA
      </div>
    </div>

    <div class="row innerRow">
      <div class="cell">
        Maxwell Johnson
      </div>
      <div class="cell">
        26
      </div>
      <div class="cell">
        UX Architect & Designer
      </div>
      <div class="cell">
        Arlington, MA
      </div>
    </div>

    <div class="row innerRow">
      <div class="cell">
        Harry Harrison
      </div>
      <div class="cell">
        25
      </div>
      <div class="cell">
        Front-End Developer
      </div>
      <div class="cell">
        Boston, MA
      </div>
    </div>
  </div>

</div> -->
<!-- end of testing table -->

<!-- JavaScript -->
<script>
  var startButton = document.querySelector('#start');
  var stopButton = document.querySelector('#stop');
  var resetButton = document.querySelector('#reset');
  var theTimer = document.querySelector("#counter");

  var interval;
  var timer = [0,0,0,0];
  // var timerRunning = false;

  function leadingZero(time) {
      if (time <= 9) {
          time = "0" + time;
      }
      return time;
  }

  function runTimer() {

      let currentTime = leadingZero(timer[0]) + ":" + leadingZero(timer[1]) + ":" + leadingZero(timer[2]);
      theTimer.innerHTML = currentTime;
      document.querySelector("#timer_count_time").value = theTimer.innerHTML;
      timer[3]++;

      timer[0] = Math.floor((timer[3]/100)/60);
      timer[1] = Math.floor((timer[3]/100) - (timer[0] * 60));
      timer[2] = Math.floor(timer[3] - (timer[1] * 100) - (timer[0] * 6000));
  }

  function startTimer(event) {

    // event.preventDefault();
    // if (!timerRunning) {
      // timerRunning = true;
      interval = setInterval(runTimer, 10);
    // }
  }

  // stop timer
  function stopTimer() {

    // event.preventDefault();
    clearInterval(interval);
  }

  // Reset everything:
  function reset() {
      clearInterval(interval);
      interval = null;
      timer = [0,0,0,0];
      // timerRunning = false;

      theTimer.innerHTML = "00:00:00";
  }



  startButton.addEventListener('click', startTimer, false);
  // start.addEventListener('click', () => { startTimer(event) }, false);
  stopButton.addEventListener('click', stopTimer, false);
  // stop.addEventListener('click', () => { stopTimer(event) }, false);
  resetButton.addEventListener("click", reset, false);
  // resetButton.addEventListener('click', () => { resetTimer(event) }, false);


</script>
